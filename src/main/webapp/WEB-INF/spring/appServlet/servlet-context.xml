<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    <!--
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>

    </mvc:annotation-driven> -->


    <!--    <context:component-scan base-package="com.spring.pettu"/>-->
    <context:component-scan base-package="com.spring"/>


    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <mvc:resources mapping="/assets/**" location="/pettu/assets/"/>
    <mvc:resources mapping="/**/css/**" location="/pettu/" />
    <mvc:resources mapping="/user/icon/**" location="/pettu/user/icon/" />
    <mvc:resources mapping="/**/js/**" location="/pettu/" />
    <mvc:resources mapping="/hotdeal/js/**" location="/pettu/hotdeal/js" />


    <bean id="MY_tomcat_ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@yeongbee.store:9268:XE"/>
        <property name="username" value="poto020"/>
        <property name="password" value="cat020"/>
    </bean>

    <bean id="MY_tomcat_ds_CONSOL_PRINT" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="MY_tomcat_ds"/>
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE"/>
                <property name="sqlPrefix" value=""/>
            </bean>
        </property>
    </bean>

    <bean id="ID_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="MY_tomcat_ds_CONSOL_PRINT"/>
        <property name="mapperLocations" value="classpath*:mapper/*Mapper.xml"/>
        <property name="configLocation" value="classpath:/mybatis-context.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.spring.pettu.mapper"/>
    </bean>


    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="ID_sqlSessionFactory"/>
    </bean>

    <!-- JDBC 관련 트랜잭션 매니저 설정 -->
    <!--Transaction + Annotation -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- DataSource 를 Bean으로 등록 -->

    <bean id="ID_manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="MY_tomcat_ds_CONSOL_PRINT"/>
    </bean>

    <tx:annotation-driven transaction-manager="ID_manager"/>

    <tx:advice id="ID_tx_advice" transaction-manager="ID_manager">
        <tx:attributes>
            <tx:method name="*" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="ID_cut" expression="execution(public * com.spring.pettu..*Impl.*(..))"/>
        <aop:advisor advice-ref="ID_tx_advice" pointcut-ref="ID_cut"/>
    </aop:config>


    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


</beans>